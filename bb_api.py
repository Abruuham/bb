import jsonimport datetimefrom pytz import timezoneimport pytzfrom urllib.request import urlopenimport urllib.parseimport urllib.requestfrom socket import timeoutfrom pprint import pprintfrom lxml import etreeimport requestsheaders = {            'Upgrade-Insecure-Requests': '1',            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36',            'Sec-Fetch-Dest': 'document',            'Origin': 'https://calbaptist.blackboard.com',            'Content-Type': 'application/x-www-form-urlencoded',            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',            'Sec-Fetch-Site': 'same-origin',            'Sec-Fetch-Mode': 'navigate',            'Sec-Fetch-User': '?1',        }class BlackBoardAPI:        def __init__(self, student_id, password):        self.session = BlackBoardAPI.connect_to_black_board(student_id, password)    @classmethod    def connect_to_black_board(cls, student_id, password):        consent_cookie = {            "domain": "calbaptist.blackboard.com",            "name": "COOKIE_CONSENT_ACCEPTED",            "path": "/",            "secure": "false",            "value": "true"        }        session = requests.Session()        session.cookies.set(**consent_cookie)        r = session.get("https://calbaptist.blackboard.com/")        html_tree = etree.HTML(r.text)        elements = html_tree.xpath('/html/body/div[1]/div/div/div[7]/section/ul[1]/li[2]/div/form/input[3]')        security_val = elements[0].get('value')        url = "https://calbaptist.blackboard.com/webapps/login/"        payload = 'action=login&blackboard.platform.security.NonceUtil.nonce={security_val}&login=Login&new_loc=&password={password_url_encoded}&user_id={student_id}'.format(            security_val=security_val, student_id=student_id, password_url_encoded=urllib.parse.quote(password))        session.request("POST", url, headers=headers, data=payload)        return session    def get_classes(self):        url = "https://calbaptist.blackboard.com/webapps/calendar/calendarData/calendars?mode=personal&course_id=&_=1589778737365"        response = self.session.get(url, headers=headers)        response = json.loads(response.text)        class_list = list()        for calendar in response.get('calendars'):            if calendar.get('id') != 'INSTITUTION' and calendar.get('id') != 'PERSONAL' and calendar.get(                    'id') != 'ONG-COE':                class_list.append(calendar.get('id'))        return class_list    def get_assignments_for_class(self, class_name):        url = "https://calbaptist.blackboard.com/webapps/calendar/calendarData/events?start=1587884400000&end=1606903394000&course_id=&calendarIds={0}".format(            class_name)        date_format = "%m/%d/%Y"        response = self.session.get(url, headers=headers)        response = json.loads(response.text)        print(class_name)        for a in response:            if a.get('calendarId') == class_name:                    print('\r\t' + 'assignment:' + a['title'])                    date_str = a['start']                    date = datetime.datetime.strptime(date_str, '%Y-%m-%dT%H:%M:%S')                    date = date.astimezone(timezone('US/Pacific'))                    date = date.strftime("%b %d, %Y")                    print('\r\t' + 'due: ' + date)            else:                return 'test'     if __name__ == '__main__':    student_id = student_id    password = 'pwd'    test = BlackBoardAPI(student_id=student_id, password=password)        for class_name in test.get_classes():        pprint(test.get_assignments_for_class(class_name))            